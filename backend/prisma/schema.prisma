// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

model User {
  id                String @id @default(uuid())
  name              String
  email             String @unique
  password          String
  procedures        Procedure[]
  costs             Cost[]
  createdAt         DateTime                @default(now()) @map("created_at")
  updatedAt         DateTime?               @updatedAt @map("updated_at")
  deletedAt         DateTime?               @map("deleted_at")

  @@map("users")
}

model Procedure {
  id                String                  @id @default(uuid())
  doctorId          String                  @map("doctor_id")
  categoryId        String                  @map("category_id")
  patientName       String?                 @map("patient_name")
  cpf               String?
  billing           Decimal
  invoice           Decimal
  date              DateTime
  createdAt         DateTime                @default(now()) @map("created_at")
  updatedAt         DateTime?               @updatedAt @map("updated_at")
  deletedAt         DateTime?               @map("deleted_at")
  payments          Payment[]

  doctor            User                    @relation(fields: [doctorId], references: [id])
  category          Category                @relation(fields: [categoryId], references: [id])

  @@map("procedures")
}

model Payment {
  id                String                  @id @default(uuid())
  procedureId       String                  @map("procedure_id")
  date              DateTime
  value             Decimal
  createdAt         DateTime                @default(now()) @map("created_at")
  updatedAt         DateTime?               @updatedAt @map("updated_at")
  deletedAt         DateTime?               @map("deleted_at")

  procedure         Procedure               @relation(fields: [procedureId], references: [id])

  @@map("payments")
}

model Category {
  id              String                    @id @default(uuid())
  name            String
  procedures      Procedure[]

  @@map("categories")
}

model Cost {
  id                    String                  @id @default(uuid())
  description           String?
  doctorId              String                  @map("doctor_id")
  categoryId            String                  @map("category_id")
  value                 Decimal
  installments          Int                     @default(1)
  date                  DateTime
  endDate               DateTime                @map("end_date")
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime?               @updatedAt @map("updated_at")
  deletedAt             DateTime?               @map("deleted_at")

  doctor            User                    @relation(fields: [doctorId], references: [id])
  category          CostCategory            @relation(fields: [categoryId], references: [id])

  @@map("costs")
}

model CostCategory {
  id              String                    @id @default(uuid())
  name            String
  costs           Cost[]

  @@map("cost_categories")
}
