// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(uuid())
  name              String
  email             String @unique
  password          String
  procedures        Procedure[]

  @@map("users")
}

model Procedure {
  id                String                  @id @default(uuid())
  doctorId          String                  @map("doctor_id")
  categoryId        String                  @map("category_id")
  patientName       String?                 @map("patient_name")
  cpf               String?
  billing           Int
  invoice           Int                     
  payment           Int?                    @map("paid_value")
  date              DateTime
  createdAt         DateTime                @default(now()) @map("created_at")
  updatedAt         DateTime?               @updatedAt @map("updated_at")
  deletedAt         DateTime?               @map("deleted_at")
  payments          Payment[]

  doctor            User                    @relation(fields: [doctorId], references: [id])
  category          Category                @relation(fields: [categoryId], references: [id])
  
  @@map("procedures")
}

model Payment {
  id                String                  @id @default(uuid())
  procedureId       String                  @map("procedure_id")
  date              DateTime
  value             Int
  createdAt         DateTime                @default(now()) @map("created_at")
  updatedAt         DateTime?               @updatedAt @map("updated_at")
  deletedAt         DateTime?               @map("deleted_at")

  procedure         Procedure               @relation(fields: [procedureId], references: [id])

  @@map("payments")
}

model Category {
  id              String                    @id @default(uuid())
  name            String
  procedures      Procedure[]

  @@map("categories")
}
